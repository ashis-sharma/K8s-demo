{"version":3,"sources":["components/Task.js","components/constants.js","components/Personal.js","components/Home.js","components/Work.js","index.js"],"names":["Task","props","className","type","checked","completed","onChange","toggleComplete","id","style","textDecoration","title","onClick","deleteItem","url","Personal","personalServiceURL","React","useState","tasks","setTasks","textValue","setTextValue","value","a","options","method","headers","body","JSON","stringify","fetch","then","resp","json","data","response","onUpdate","onDelete","useEffect","e","target","onKeyDown","key","onAdd","map","task","_id","Home","homeServiceURL","Work","workServiceURL","Title","stats","setStats","total","inCompleted","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40879b0b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Task(props) {\r\n    return (\r\n        <div className=\"task\">\r\n            <input \r\n                type=\"checkbox\"\r\n                checked={props.completed} \r\n                className=\"checkbox\" \r\n                onChange={() => props.toggleComplete(props.id,!props.completed) } \r\n            />\r\n            <p style={{textDecoration: props.completed ? 'line-through' : 'none'}}>{props.title}</p>\r\n            <button \r\n                className=\"delete\" \r\n                onClick={() => props.deleteItem(props.id,!props.completed)}>\r\n            x\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","const url = \"http://40.80.80.95\";\r\nexport {url};","import React from 'react'\r\nimport Task from './Task';\r\nimport { url } from './constants'\r\n\r\nexport default function Personal() {\r\n    const personalServiceURL= `${url}/personal-service`;\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [textValue,setTextValue] = React.useState(\"\");\r\n\r\n    async function onAdd(value){\r\n        const options = {\r\n            method: 'POST',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({title: value, completed: false})\r\n        }\r\n        const response = await fetch(`${personalServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n        setTextValue(\"\");\r\n    }\r\n\r\n    async function onUpdate(id,value){\r\n        const options ={\r\n            method: 'PUT',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id,value})\r\n        }\r\n        const response = await fetch(`${personalServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n    }\r\n\r\n    async function onDelete(id,value){\r\n        const options ={\r\n            method: 'DELETE',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id,value})\r\n        }\r\n        const response = await fetch(`${personalServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${personalServiceURL}`).then(response => response.json()).then(data => {\r\n            setTasks(data)\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"personal\">\r\n            <h3>Personal Task</h3>\r\n            <input \r\n                type=\"text\" \r\n                className=\"add-field\"\r\n                value={textValue} \r\n                onChange={e => setTextValue(e.target.value)}\r\n                onKeyDown={e => {if(e.key === \"Enter\"){ onAdd(e.target.value) }}}\r\n            >\r\n            </input>\r\n            {tasks.map(task => (\r\n                <Task key={task._id} id={task._id} title={task.title} completed={task.completed} toggleComplete={onUpdate} deleteItem={onDelete} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Task from './Task';\r\nimport { url } from './constants'\r\n\r\nexport default function Home() {\r\n    const homeServiceURL= `${url}/home-service`;\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [textValue,setTextValue] = React.useState(\"\");\r\n\r\n    async function onAdd(value){\r\n        const options = {\r\n            method: 'POST',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({title: value, completed: false})\r\n        }\r\n        const response = await fetch(`${homeServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n        setTextValue(\"\");\r\n    }\r\n\r\n    async function onUpdate(id,value){\r\n        const options ={\r\n            method: 'PUT',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id,value})\r\n        }\r\n        const response = await fetch(`${homeServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n    }\r\n\r\n    async function onDelete(id,value){\r\n        const options ={\r\n            method: 'DELETE',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id,value})\r\n        }\r\n        const response = await fetch(`${homeServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${homeServiceURL}`).then(response => response.json()).then(data => {\r\n            setTasks(data)\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h3>Home Task</h3>\r\n            <input \r\n                type=\"text\" \r\n                className=\"add-field\" \r\n                value={textValue} \r\n                onChange={e => setTextValue(e.target.value)}\r\n                onKeyDown={e => {if(e.key === \"Enter\"){onAdd(e.target.value)}}}\r\n            >\r\n            </input>\r\n            {tasks.map(task => (\r\n                <Task key={task._id} id={task._id} title={task.title} completed={task.completed} toggleComplete={onUpdate} deleteItem={onDelete} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Task from './Task';\r\nimport { url } from './constants'\r\n\r\nexport default function Work(){\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [textValue,setTextValue] = React.useState(\"\");\r\n\r\n    const  workServiceURL= `${url}/work-service`;\r\n\r\n    async function onAdd(value){\r\n        const options ={\r\n            method: 'POST',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({title: value, completed: false})\r\n        }\r\n        const response = await fetch(`${workServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n        setTextValue(\"\");\r\n    }\r\n\r\n    async function onUpdate(id,value){\r\n        const options ={\r\n            method: 'PUT',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id,value})\r\n        }\r\n        const response = await fetch(`${workServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n    }\r\n\r\n    async function onDelete(id,value){\r\n        const options ={\r\n            method: 'DELETE',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id,value})\r\n        }\r\n        const response = await fetch(`${workServiceURL}`,options).then(resp => resp.json()).then(data => data);\r\n        setTasks(response);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetch(`${workServiceURL}`).then(response => response.json()).then(data => {\r\n            setTasks(data)\r\n        });\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"work\">\r\n            <h3>Work Task</h3>\r\n            <input \r\n                type=\"text\" \r\n                className=\"add-field\"\r\n                value={textValue}\r\n                onChange={e => setTextValue(e.target.value)}\r\n                onKeyDown={e => {if(e.key === \"Enter\"){onAdd(e.target.value)}}}\r\n            >\r\n            </input>\r\n            {tasks.map(task => (\r\n                <Task key={task._id} id={task._id} title={task.title} completed={task.completed} toggleComplete={onUpdate} deleteItem={onDelete} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Personal from './components/Personal';\nimport Home from './components/Home';\nimport Work from './components/Work';\nimport './index.css';\nimport './style.css';\nimport { url } from './components/constants';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Title />\n    <div className=\"container\">\n      <Personal />\n      <Work />\n      <Home />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction Title(){\n  const [stats, setStats] = React.useState({});\n  React.useEffect(() => {\n    fetch(`${url}`).then(response => response.json()).then(data => setStats(data));\n  })\n  return <h1>Total {stats.total} Tasks | Completed {stats.completed} | Pending {stats.inCompleted}</h1>;\n}"],"sourceRoot":""}